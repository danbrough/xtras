# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: publish_macos

on:
  workflow_dispatch:
  #workflow_call:


#  release:
#    types: [ created ]

jobs:
  setup:
    runs-on: macos-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Upgrade
        #if: ${{ env.ACT }} # Only run on local act setups, as GitHub Actions provides the Android SDK on Ubuntu
        shell: bash
        run: echo "need to upgrade"

      - name: Setup gradle
        uses: yumemi-inc/setup-java-gradle@v1
        with:
          cache-read-only: false
          gradle-home-cache-cleanup: false
          java-distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: '21'

      - name: Set up Android SDK
        if: ${{ env.ACT }} # Only run on local act setups, as GitHub Actions provides the Android SDK on Ubuntu
        uses: android-actions/setup-android@v3.2.1

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r26d
          add-to-path: true
        env:
          ANDROID_NDK: ${{ steps.setup-ndk.outputs.ndk-path }}


      - name: Setup gradle.properties
        shell: bash
        run: |
          echo XTRAS_DIR=$HOME/xtras >> $GITHUB_ENV
          echo KONAN_DIR=$HOME/.konan >> $GITHUB_ENV
          GRADLE_PROPS=$HOME/.gradle/gradle.properties
          echo Configuring $GRADLE_PROPS 
          if [ -f $GRADLE_PROPS ]; then
            echo existing $GRADLE_PROPS
            cat $GRADLE_PROPS
          fi
          cat > $GRADLE_PROPS <<PROPS
          org.gradle.caching=true
          signing.key=${{ secrets.GPG_SIGNING_KEY }}
          signing.password=${{ secrets.GPG_SIGNING_PASSWORD }}
          sonatype.profileID=${{ secrets.SONATYPE_PROFILE_ID }}
          sonatype.username=${{ secrets.SONATYPE_USERNAME }}
          sonatype.password=${{ secrets.SONATYPE_PASSWORD }}
          xtras.dir=$HOME/xtras
          PROPS
          chmod 600 $GRADLE_PROPS

#      - name: Cache Xtras dir
#        id: cache_xtras
#        uses: actions/cache@v4.0.2
#        with:
#          path: ${{ env.XTRAS_DIR }}
#          key: ${{ runner.os }}-xtras
#
#      - name: Cache Konan dir
#        id: cache_konan
#        uses: actions/cache@v4.0.2
#        with:
#          path: ${{ env.KONAN_DIR }}
#          key: ${{ runner.os }}-konan

      #      - name: publish_support
      #        shell: bash
      #        run: |
      #          ./gradlew :support:publishAllPublicationsToSonatypeRepository -Psonatype.closeRepository=1

      #      - name: publish_jni
      #        shell: bash
      #        run: |
      #          ./gradlew :jni:publishAllPublicationsToSonatypeRepository -Psonatype.closeRepository=1

      - name: publish_support
        shell: bash
        run: |
          ./gradlew :openssl_plugin:publishAllPublicationsToSonatypeRepository :openssl:publishAllPublicationsToSonatypeRepository -Psonatype.closeRepository=0
          #./gradlew :plugin:publishAllPublicationsToSonatypeRepository -Psonatype.closeRepository=1
          #./gradlew :support:publishAllPublicationsToSonatypeRepository -Psonatype.closeRepository=1
          #./gradlew :jni:publishAllPublicationsToSonatypeRepository -Psonatype.closeRepository=1